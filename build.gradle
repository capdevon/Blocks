plugins {
    id 'idea'
    id 'java-library'
    id 'maven-publish'
    id 'com.jfrog.bintray' version "1.8.4"
}

group = "com.rvandoosselaer"
version = "1.7.0-SNAPSHOT"
// The artifact ID defaults to the project name configured in settings.gradle

sourceCompatibility = 1.8

ext {
    jmeVersion = "[3.3,)"
    lombokVersion = "[1.18,)"
    slf4jVersion = "[1.8,)"
    simMathVersion = "[1.4,)"
    junitVersion = "[5.4.0,)"
    mockitoVersion = "[3.1,)"
    caffeineVersion = "2.8.8"
    protobufVersion = "[3.10,)"
    guavaVersion = "[28,)"
    minieVersion = "[3.0,)"
    jacksonVersion = "[2.11,)"
}

repositories {
    jcenter()
}

dependencies {
    // JME
    implementation "org.jmonkeyengine:jme3-core:${jmeVersion}"
    implementation "org.jmonkeyengine:jme3-effects:${jmeVersion}"

    // physics
    implementation "com.github.stephengold:Minie:${minieVersion}"

    // utilities
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    api "com.simsilica:sim-math:${simMathVersion}"
    implementation "com.github.ben-manes.caffeine:caffeine:${caffeineVersion}"
    implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
    implementation "com.google.guava:guava:${guavaVersion}"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}"

    // logging
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    implementation "org.slf4j:jul-to-slf4j:${slf4jVersion}"

    // testing
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.jmonkeyengine:jme3-core:${jmeVersion}"
    testImplementation "org.jmonkeyengine:jme3-desktop:${jmeVersion}"
}

test {
    useJUnitPlatform()
}

// copy the generated javadocs into the /docs folder for the github pages
task copyJavadoc(dependsOn: javadoc) {
    doLast {
        copy {
            from "$buildDir/docs"
            into "$projectDir/docs"
        }
    }
}

// remove the generated javadocs in the /docs folder
task cleanJavadoc(type: Delete) {
    delete "$projectDir/docs/javadoc/"
}

clean {
    dependsOn cleanJavadoc
}

jar {
    exclude 'blocks.proto'
}

build {
    dependsOn copyJavadoc
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

javadoc {
    failOnError = false
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_APIKEY')
    publications = ['MyPublication']
    pkg {
        repo = 'rvandoosselaer'
        name = rootProject.getName()
        licenses = ['BSD 3-Clause']
        vcsUrl = 'https://github.com/rvandoosselaer/Blocks.git'
        version {
            name = '1.7.0-SNAPSHOT'
            released = new Date()
        }
    }
}
